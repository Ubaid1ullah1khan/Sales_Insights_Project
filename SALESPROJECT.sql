--                        "Data-Driven Sales Analysis: Insights on Revenue, Trends, and Customer Behavior"

-- EXPLORING DATA
SELECT TOP 10 * FROM SALE..PRODUCTS;
SELECT TOP 10 * FROM SALE..SALES;
SELECT TOP 10 * FROM SALE..CUSTOMERS;
____________________________________________
--CHECKING FOR DUPLICATES
SELECT PRODUCTID,PRODUCTNAME,CATEGORY,PRICE
FROM SALE..PRODUCTS
GROUP BY PRODUCTID,PRODUCTNAME,CATEGORY,PRICE
HAVING COUNT(*)>1

SELECT SALEID,CUSTOMERID,PRODUCTID,QUANTITY,SALEDATE,TOTALREVENUE
FROM SALE..SALES
GROUP BY SALEID,CUSTOMERID,PRODUCTID,QUANTITY,SALEDATE,TOTALREVENUE
HAVING COUNT(*)>1

SELECT CUSTOMERID,CUSTOMERID,CITY,STATE,COUNTRY
FROM SALE..CUSTOMERS
GROUP BY CUSTOMERID,CUSTOMERID,CITY,STATE,COUNTRY
HAVING COUNT(*)>1
________________________________

--CHECKING FOR NULL
SELECT *
FROM SALE..PRODUCTS
WHERE PRODUCTID IS NULL OR PRODUCTNAME IS NULL OR CATEGORY IS NULL OR PRICE IS NULL

SELECT *
FROM SALE..SALES
WHERE SALEID IS NULL OR CUSTOMERID IS NULL OR PRODUCTID IS NULL OR QUANTITY IS NULL OR SALEDATE IS NULL OR TOTALREVENUE IS NULL

SELECT *
FROM SALE..CUSTOMERS
WHERE CUSTOMERID IS NULL OR CUSTOMERNAME IS NULL OR CITY IS NULL OR STATE IS NULL OR COUNTRY IS NULL
_________________________________

-- ADD CALCULATED COLUMN TOTALREVENUE
ALTER TABLE SALE..SALES ADD TOTALREVENUE DECIMAL(10,2)
UPDATE SALE..SALES
SET TOTALREVENUE=SALES.QUANTITY*PRODUCTS.PRICE
FROM SALES
JOIN PRODUCTS ON SALES.PRODUCTID=PRODUCTS.PRODUCTID
__________________________________

--                                         ANALYSIS

-- FINDING TOP 10 SELLING PRODUCT ON THE BASIS OF QUANTITY
SELECT TOP 10 P.PRODUCTNAME, SUM(S.QUANTITY) AS AGGREGATEDQUANTITY
FROM SALE..SALES S
LEFT JOIN SALE..PRODUCTS P
ON S.PRODUCTID=P.PRODUCTID
GROUP BY P.PRODUCTNAME
ORDER BY AGGREGATEDQUANTITY DESC
__________________________________

--FINDING THE NAMES OF TOP 10 PRODUCTS BASED IN REVENUE
SELECT TOP 10 P.PRODUCTNAME,SUM(S.TOTALREVENUE) AS REVENUE
FROM SALE..PRODUCTS P
JOIN SALE..SALES S ON P.PRODUCTID=S.PRODUCTID
GROUP BY P.PRODUCTNAME
ORDER BY REVENUE DESC
_________________________________

-- FINDING THE NAMES OF TOP 10 CUSTOMERS WHO SPENT THE MOST 
SELECT TOP 10 C.CUSTOMERNAME, SUM(S.TOTALREVENUE) AS MONEYSPENT
FROM SALE..SALES S
JOIN SALE..CUSTOMERS C
ON C.CUSTOMERID=S.CUSTOMERID
GROUP BY C.CUSTOMERNAME
ORDER BY MONEYSPENT DESC
________________________________

--FINDING TOP 10 CITIES THAT GENERATED THE MOST REVENUE
SELECT TOP 10 C.CITY, SUM(TOTALREVENUE) AS REVENUE
FROM SALE..SALES S
JOIN SALE..CUSTOMERS C ON S.CUSTOMERID=C.CUSTOMERID
GROUP BY C.CITY
ORDER BY REVENUE DESC
--SAME FOR TOP 10 SATATES
SELECT TOP 10 C.STATE,SUM(TOTALREVENUE) AS REVENUE
FROM SALE..SALES S
JOIN SALE..CUSTOMERS C ON S.CUSTOMERID=C.CUSTOMERID
GROUP BY C.STATE
ORDER BY REVENUE DESC
_______________________________

--CHECKING FOR TOP 10 PRODUCT CATEGORIES GENERATING MOST REVENUE
SELECT TOP 10 P.CATEGORY,SUM(S.TOTALREVENUE) AS REVENUE
FROM SALE..PRODUCTS P
JOIN SALE..SALES S ON P.PRODUCTID=S.PRODUCTID
GROUP BY P.CATEGORY
ORDER BY REVENUE DESC
_______________________________
--CHECKING FOR PERCENTAGE OF MOST SOLD PRODUCTS COMPARED TO OTHER
SELECT  
    C.STATE, 
    SUM(S.TOTALREVENUE) AS TOTALREVENUE, 
    (SUM(S.TOTALREVENUE) * 100.0 / 
     (SELECT SUM(TOTALREVENUE) FROM Sale..sales)) AS STATEREVENUEPERCENTAGE
FROM 
    Sale..sales S
JOIN 
    Sale..customers C ON S.CustomerID = C.CustomerID
GROUP BY 
    C.State
ORDER BY 
    STATEREVENUEPERCENTAGE DESC

_______________________________
--CHECKING FOR MONTHLY REVENUE TRENDS

SELECT YEAR(S.SALEDATE) AS YEAR, MONTH(S.SALEDATE) AS MONTH, SUM(S.TOTALREVENUE) AS TOTALREVENUE
FROM SALE..SALES S
GROUP BY YEAR(S.SALEDATE), MONTH(S.SALEDATE)
ORDER BY YEAR, MONTH
-- CHECING YEARLY REVENUE TRENDS SEPERATELY
SELECT YEAR(SALEDATE) AS YEAR, SUM(TOTALREVENUE) AS TOTALREVENUE
FROM SALE..SALES
GROUP BY YEAR(SALEDATE)
ORDER BY YEAR (SALEDATE)
______________________________

--CHECKING FOR YEARLY GROWTH PERCENTAGE
SELECT 
    '2023-2024' AS YEAR,
    ( 
        SUM(CASE WHEN YEAR(SALEDATE) = 2024 THEN TOTALREVENUE ELSE 0 END) 
        / 
        SUM(CASE WHEN YEAR(SALEDATE) = 2023 THEN TOTALREVENUE ELSE 0 END) 
        * 100
    ) AS YEARLYPERCENTAGECHANGE
FROM SALE..SALES
______________________________
--PRODUCT PERFORMANCE BY YEAR/MONTH

SELECT YEAR(S.SALEDATE) AS YEAR, MONTH(S.SALEDATE) AS MONTH, P.PRODUCTNAME, SUM(S.TOTALREVENUE) AS REVENUE
FROM SALE..SALES S
JOIN SALE..PRODUCTS P ON S.PRODUCTID = P.PRODUCTID
GROUP BY YEAR(S.SALEDATE), MONTH(S.SALEDATE), P.PRODUCTNAME
ORDER BY YEAR, MONTH, REVENUE DESC
______________________________
--CUSTOMERS WHOSE TOTAL REVENUE EXCEEDS THE AVERAGE CUSTOMER REVENUE

SELECT CUSTOMERNAME, SUM(TOTALREVENUE) AS CUSTOMERREVENUE
FROM SALE..SALES S
JOIN SALE..CUSTOMERS C ON S.CUSTOMERID = C.CUSTOMERID
GROUP BY CUSTOMERNAME
HAVING SUM(TOTALREVENUE) > (
    SELECT SUM(TOTALREVENUE) / COUNT(DISTINCT CUSTOMERID)
    FROM SALE..SALES)
______________________________
--REVENUE CONTRIBUTION BY PRODUCT

SELECT P.PRODUCTNAME, SUM(S.TOTALREVENUE) AS REVENUE,
       SUM(S.TOTALREVENUE) / (SELECT SUM(TOTALREVENUE) FROM SALE..SALES) * 100 AS REVENUE_PERCENTAGE
FROM SALE..SALES S
JOIN SALE..PRODUCTS P ON S.PRODUCTID = P.PRODUCTID
GROUP BY P.PRODUCTNAME
ORDER BY REVENUE DESC
_______________________________________

--FINDING WHAT PRODUCT WAS SOLD MOST IN DIFFERENT STATES

WITH RANKEDPRODUCTS AS (
    SELECT 
        C.STATE,
        P.PRODUCTNAME,
        SUM(S.QUANTITY) AS QUANTITY,
        RANK() OVER (PARTITION BY C.STATE ORDER BY SUM(S.QUANTITY) DESC) AS PRODUCTRANK
    FROM SALE..CUSTOMERS C
    JOIN SALE..SALES S ON S.CUSTOMERID = C.CUSTOMERID
    JOIN SALE..PRODUCTS P ON S.PRODUCTID = P.PRODUCTID
    GROUP BY C.STATE, P.PRODUCTNAME
)
SELECT 
    STATE,
    PRODUCTNAME,
    QUANTITY
FROM RANKEDPRODUCTS
WHERE PRODUCTRANK = 1
ORDER BY STATE
______________________________

--CATEGORIZING CUSTOMERS BASED ON THEIR SPENDING
SELECT CUSTOMERNAME, SUM(TOTALREVENUE) AS CUSTOMERREVENUE,
       CASE
           WHEN SUM(TOTALREVENUE) > 4000 THEN 'High Spender'
           WHEN SUM(TOTALREVENUE) BETWEEN 2000 AND 4000 THEN 'Medium Spender'
           ELSE 'Low Spender'
       END AS SPENDING_CATEGORY
FROM SALE..SALES S
JOIN SALE..CUSTOMERS C ON S.CUSTOMERID = C.CUSTOMERID
GROUP BY CUSTOMERNAME
ORDER BY CUSTOMERREVENUE DESC
_______________________________







